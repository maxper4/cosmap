// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmap/cosmap/event_type.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EventTypes int32

const (
	EventTypes_EVENT_TYPES_UNKNOWN  EventTypes = 0
	EventTypes_EVENT_TYPES_BOTTLING EventTypes = 1
	EventTypes_EVENT_TYPES_ACCIDENT EventTypes = 2
	EventTypes_EVENT_TYPES_POLICE   EventTypes = 3
)

var EventTypes_name = map[int32]string{
	0: "EVENT_TYPES_UNKNOWN",
	1: "EVENT_TYPES_BOTTLING",
	2: "EVENT_TYPES_ACCIDENT",
	3: "EVENT_TYPES_POLICE",
}

var EventTypes_value = map[string]int32{
	"EVENT_TYPES_UNKNOWN":  0,
	"EVENT_TYPES_BOTTLING": 1,
	"EVENT_TYPES_ACCIDENT": 2,
	"EVENT_TYPES_POLICE":   3,
}

func (x EventTypes) String() string {
	return proto.EnumName(EventTypes_name, int32(x))
}

func (EventTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7ab98a02e9085e70, []int{0}
}

func init() {
	proto.RegisterEnum("cosmap.cosmap.EventTypes", EventTypes_name, EventTypes_value)
}

func init() { proto.RegisterFile("cosmap/cosmap/event_type.proto", fileDescriptor_7ab98a02e9085e70) }

var fileDescriptor_7ab98a02e9085e70 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0xce, 0x2f, 0xce,
	0x4d, 0x2c, 0xd0, 0x87, 0x52, 0xa9, 0x65, 0xa9, 0x79, 0x25, 0xf1, 0x25, 0x95, 0x05, 0xa9, 0x7a,
	0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xbc, 0x10, 0x09, 0x3d, 0x08, 0xa5, 0x55, 0xc8, 0xc5, 0xe5,
	0x0a, 0x52, 0x12, 0x52, 0x59, 0x90, 0x5a, 0x2c, 0x24, 0xce, 0x25, 0xec, 0x1a, 0xe6, 0xea, 0x17,
	0x12, 0x1f, 0x12, 0x19, 0xe0, 0x1a, 0x1c, 0x1f, 0xea, 0xe7, 0xed, 0xe7, 0x1f, 0xee, 0x27, 0xc0,
	0x20, 0x24, 0xc1, 0x25, 0x82, 0x2c, 0xe1, 0xe4, 0x1f, 0x12, 0xe2, 0xe3, 0xe9, 0xe7, 0x2e, 0xc0,
	0x88, 0x2e, 0xe3, 0xe8, 0xec, 0xec, 0xe9, 0xe2, 0xea, 0x17, 0x22, 0xc0, 0x24, 0x24, 0xc6, 0x25,
	0x84, 0x2c, 0x13, 0xe0, 0xef, 0xe3, 0xe9, 0xec, 0x2a, 0xc0, 0xec, 0xe4, 0x74, 0xe2, 0x91, 0x1c,
	0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x4e, 0x78, 0x2c, 0xc7, 0x70, 0xe1, 0xb1,
	0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x51, 0x1a, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9,
	0xf9, 0xb9, 0xfa, 0xb9, 0x89, 0x15, 0x05, 0xa9, 0x45, 0x26, 0x30, 0x7f, 0x54, 0xc0, 0x18, 0x20,
	0xaf, 0x14, 0x27, 0xb1, 0x81, 0x3d, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x57, 0x65, 0xf5,
	0x33, 0xee, 0x00, 0x00, 0x00,
}
